---
name: "Release GH+MR+CF"
"on":
  workflow_dispatch:
    inputs:
      releaseType:
        type: "choice"
        description: "Release Type"
        options:
        - "stable"
        - "beta"
        - "alpha"
      platform:
        type: "choice"
        description: "Platform"
        options:
        - "both"
        - "fabric"
        - "neoforge"
jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
    - name: "Checkout Repository"
      uses: "actions/checkout@v4"
    - name: "Setup JDK 21"
      uses: "actions/setup-java@v4"
      with:
        distribution: "adopt"
        java-version: 21
    - name: "Setup Gradle"
      uses: "gradle/actions/setup-gradle@v4"
      with:
        gradle-home-cache-cleanup: true
        cache-read-only: true
    - name: "Validate Gradle Wrapper Integrity"
      uses: "gradle/actions/wrapper-validation@v4"
    - name: "Grant execute permission for gradlew"
      run: "chmod +x gradlew"
    - name: "Gradle Release Build"
      env:
        RELEASE_WORKFLOW: true
        PLATFORM: "${{ inputs.platform }}"
      run: "./gradlew build"
    - name: "Set environment variables for the script below"
      run: "echo \"MINECRAFT_VERSION=$(./gradlew -q printMinecraftVersion)\" >> $GITHUB_ENV\n\
        echo \"MOD_VERSION=$(./gradlew -q printModVersion)\" >> $GITHUB_ENV\n"
    - name: "Set Release Name"
      id: "set_release_name"
      run: "if [ \"${{ inputs.platform }}\" == \"both\" ]; then\n  echo \"RELEASE_NAME=Sequoia\
        \ $MOD_VERSION for Minecraft $MINECRAFT_VERSION Fabric and Neoforge\" >> $GITHUB_ENV\n\
        elif [ \"${{ inputs.platform }}\" == \"fabric\" ]; then\n  echo \"RELEASE_NAME=Sequoia\
        \ $MOD_VERSION for Minecraft $MINECRAFT_VERSION Fabric\" >> $GITHUB_ENV\n\
        elif [ \"${{ inputs.platform }}\" == \"neoforge\" ]; then\n  echo \"RELEASE_NAME=Sequoia\
        \ $MOD_VERSION for Minecraft $MINECRAFT_VERSION Neoforge\" >> $GITHUB_ENV\n\
        fi\n"
    - name: "Replace placeholders in CHANGELOG.md"
      run: "sed -i 's/_ReleaseTag_/mc${{ env.MINECRAFT_VERSION }}-${{ env.MOD_VERSION\
        \ }}/g' CHANGELOG.md\nsed -i 's/_MCVersion_/${{ env.MINECRAFT_VERSION }}/g'\
        \ CHANGELOG.md\nsed -i 's/_SequoiaVersion_/${{ env.MOD_VERSION }}/g' CHANGELOG.md\
        \     \n"
    - name: "Trim CHANGELOG.md"
      run: "trimmed_changelog=$(awk '/----------/{flag=1;next}flag' CHANGELOG.md)\n\
        echo \"$trimmed_changelog\" > CHANGELOG.md\n"
    - name: "Create GitHub Release"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      run: "gh release create mc${{ env.MINECRAFT_VERSION }}-${{ env.MOD_VERSION }}\
        \ \\\n  --title=\"${{ env.RELEASE_NAME }}\" \\\n  --notes-file=CHANGELOG.md\
        \ \\\n  --target=${{ github.ref_name }} \\\n  --draft=false \\\n  --prerelease=${{\
        \ inputs.releaseType != 'stable' }} \\\n  build/libs/*.jar LICENSE\n"
    - name: "Publish to Modrinth"
      env:
        RELEASE_WORKFLOW: true
        RELEASE_TYPE: "${{ inputs.releaseType }}"
        PLATFORM: "${{ inputs.platform }}"
        MODRINTH_API_KEY: "${{ secrets.MODRINTH_API_KEY }}"
      run: "./gradlew sequoiaPublish"
